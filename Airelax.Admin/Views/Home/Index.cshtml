@{
    ViewData["Title"] = "Home Page";
    ViewData["Current"] = "Dashboard";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-4 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-warning card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">content_copy</i>
                    </div>
                    <p class="card-category">會員總數</p>
                    <h3 id="memberCountblock" class="card-title">
                        @* todo vue bind *@
                        {{MemberCount}}
                        <small>個</small>
                    </h3>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">date_range</i> last year
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-success card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">store</i>
                    </div>
                    <p class="card-category">收入</p>
                    <h3 id="incomeBeforeAWeek" class="card-title">
                        ${{IncomeBeforeAWeek}}
                    </h3>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">date_range</i> Last 1 Week
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6 col-sm-6">
            <div class="card card-stats">
                <div class="card-header card-header-danger card-header-icon">
                    <div class="card-icon">
                        <i class="material-icons">info_outline</i>
                    </div>
                    <p class="card-category">房間總數</p>
                    <h3 id="houseCountblock" class="card-title">
                        {{HouseCount}}間
                    </h3>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">local_offer</i> last year
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="card card-chart">
                <div class="card-header card-header-success">
                    <div class="ct-chart" id="dailySalesChart"></div>
                </div>
                <div class="card-body">
                    <h4 class="card-title">一周收入</h4>
                    <p class="card-category">
                        <span class="text-success"><i class="fa fa-long-arrow-up"></i> 55% </span> increase in today sales.
                    </p>
                </div>
                <div class="card-footer">
                    <div class="stats">

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card card-chart">
                <div class="card-header card-header-warning">
                    <div class="ct-chart" id="OrderChart"></div>
                </div>
                <div class="card-body">
                    <h4 class="card-title">半年訂單</h4>
                    <p class="card-category">Last Campaign Performance</p>
                </div>
                <div class="card-footer">
                    <div class="stats">

                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card card-chart">
                <div class="card-header card-header-danger">
                    <div class="ct-chart" id="completedTasksChart"></div>
                </div>
                <div class="card-body">
                    <h4 class="card-title">過去一周熱門地點</h4>
                    <p class="card-category">Last Campaign Performance</p>
                </div>
                <div class="card-footer">
                    <div class="stats">
                    </div>
                </div>
            </div>
        </div>
    </div>
    @* <div class="row"> *@
    @*     $1$ todo 改id js data #1# *@
    @*     <div class="col-md-6"> *@
    @*         <div class="card card-chart"> *@
    @*             <div class="card-header card-header-success"> *@
    @*                 <div class="ct-chart" id="dailySalesChart"></div> *@
    @*             </div> *@
    @*             <div class="card-body"> *@
    @*                 <h4 class="card-title"></h4> *@
    @*                 <p class="card-category"> *@
    @*                     <span class="text-success"><i class="fa fa-long-arrow-up"></i> 55% </span> increase in today sales. *@
    @*                 </p> *@
    @*             </div> *@
    @*             <div class="card-footer"> *@
    @*                 <div class="stats"> *@
    @* *@
    @*                 </div> *@
    @*             </div> *@
    @*         </div> *@
    @*     </div> *@
    @*     <div class="col-md-9"> *@
    @*         <div class="card card-chart"> *@
    @*             <div class="card-header card-header-warning"> *@
    @*                 <div class="ct-chart" id="websiteViewsChart"></div> *@
    @*             </div> *@
    @*             <div class="card-body"> *@
    @*                 <h4 class="card-title">半年訂單</h4> *@
    @*                 <p class="card-category">Last Campaign Performance</p> *@
    @*             </div> *@
    @*             <div class="card-footer"> *@
    @*                 <div class="stats"> *@
    @* *@
    @*                 </div> *@
    @*             </div> *@
    @*         </div> *@
    @*     </div> *@
    @* *@
    @* </div> *@
</div>

@section Scripts{
    <script>

        let json = {
            count: [
                { houseCount: "NaN" },
                { memberCount: "NaN" },

            ],
            income: {},
            popularLocation:{},
        }
        
    $(document).ready(function () {
        LoadHouseData();
        LoadMemberData();
        LoadIncomeData();
         getOrderCount();
         getPopularLocation();
    });

        let OrderChart = {};

        function LoadHouseData() {
            $.ajax({
                type: "Get",
                url: "/api/Houses/GetAllHouses",
                data: "",
                dataType: "json",
                success: function (response) {
                    json.count[0] = response
                    HouseCountBinding()
                }
            });
        }

        function LoadMemberData() {
            $.ajax({
                type: "Get",
                url: "/api/Houses/GetAllMembers",
                data: "",
                dataType: "json",
                success: function (response) {
                    json.count[1] = response
                    MemberCountBinding()
                }
            });
        }

        function LoadIncomeData() {
            const now = new Date();
            const startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 7);
            $.ajax({
                type: "Get",
                url: `/api/Income/${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}/${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`,
                data: "",
                dataType: "json",
                success: function (response) {
                    json.income = response
                    console.log(json.income)
                    const opt={};
                    opt.labels = Object.keys(json.income).map(x=>x.slice(-5));         
                    opt.series = [Object.values(json.income)];
                    IncomeBeforeAWeekBinding();
                    initDashboardPageCharts(opt, '#dailySalesChart');
                }
            })
        }
        function HouseCountBinding() {
            Vue.createApp(
                {
                    data: function () {
                        return {
                            HouseCount: json.count[0]
                        }
                    },
                }
            ).mount('#houseCountblock')
        }

        function MemberCountBinding() {
            Vue.createApp(
                {
                    data: function () {
                        return {
                            MemberCount: json.count[1]
                        }
                    },
                }
            ).mount('#memberCountblock')
        }

        
        
        $(window).resize(function () {
            // reset the seq for charts drawing animations
            seq = seq2 = 0;
            setTimeout(function () {
                initDashboardPageCharts();
            }, 500);
        });
        
        function locationBind(){
            Vue.createApp({
                data(){
                    return {
                      popularLocation:{}      
                    };
                },
                methods:{
                   
                }
            })
        }
        
        
        function getPopularLocation(){
            const now = moment().format('YYYY-MM-DD');
            const weekAgo = moment().subtract(1,'w').format('YYYY-MM-DD');
           
            fetch(`/api/trip/popular/${weekAgo}/${now}`)
            .then(response =>response.json())
            .then(data=>{
                const opt = {};
                opt.labels = data.map(x =>x.town);
                opt.series = [data.map(x => x.total)];
                drawPopularLocation(opt);
            }).catch(err=>console.log(err));
        }

        function IncomeBeforeAWeekBinding() {
            Vue.createApp({
                data: function () {
                    return {
                      
                        IncomeBeforeAWeek: Object.values(json.income).reduce((a, b)=>a+b)
                    }
                }
            }).mount('#incomeBeforeAWeek')
        }



        function initDashboardPageCharts(OrderChart, el) {
            if ($(el).length != 0) {
                optionsOrderChart = {
                    lineSmooth: Chartist.Interpolation.cardinal({
                        tension: 0
                    }),
                    low: 0,
                    high: Math.max(...OrderChart.series[0]), // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                    chartPadding: {
                        top: 0,
                        right: 20,
                        bottom: 0,
                        left: 30
                    },
                    
                }
                var OrderChart = new Chartist.Line(el, OrderChart, optionsOrderChart, 
                {plugins: [Chartist.plugins.tooltip()]});
                md.startAnimationForLineChart(OrderChart);
            }

        }
     
        function getOrderCount() {
            $.ajax({
                type: "Get",
                url: "/api/orders/count",
                data: "",
                dataType: "json",
                success: function (response) {
                    OrderChart.labels = response.map(x => x.date.slice(-2)+'月');
                    const arr = response.map(x => x.total);
                    OrderChart.series = [arr];  
                    initDashboardPageCharts(OrderChart,'#OrderChart');
                }       
            });
        }
        
    
        
       function drawPopularLocation(dataCompletedTasksChart){
            optionsCompletedTasksChart = {
                low: 0,
                high: Math.max(...dataCompletedTasksChart.series[0]) , // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                chartPadding: {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                }
            }
    
                var completedTasksChart = new Chartist.Bar('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);
    
                // start animation for the Completed Tasks Chart - Line Chart
                md.startAnimationForLineChart(completedTasksChart);
       }
    </script>
}