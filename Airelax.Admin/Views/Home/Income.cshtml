@{
    Layout = "_Layout";
    ViewData["Current"] = "收入";
}

<div class="container-fluid" id="app">
    <div class="row">
        <div class="col-md-8">
            <div class="card card-chart">
                <div class="card-header card-header-success">
                    <div class="ct-chart" id="incomeChart"></div>
                </div>
                <div class="card-body">
                    <h4 class="card-title">Income</h4>
                    <p class="card-category">
                        <span class="text-success"><i class="fa fa-long-arrow-up"></i> 55% </span> increase in today sales.
                    </p>
                </div>
                <div class="card-footer">
                    <div class="stats">
                        <i class="material-icons">access_time</i> updated 4 minutes ago
                    </div>
                </div>
            </div>
        </div>
        <div class="p-3 col-md-4">
            <div class="row">
                <label for="startDate">起始時間</label>
                <input class="m-2" type="date" id="startDateInput">
            </div>
            <div class="row">
                <label for="endDate">結束時間</label>
                <input class="m-2" type="date" id="endDateInput">
            </div>
            <div class="m-2 row">
                <div class="col-3 col-md-12">
                    <button class="btn btn-primary btn-round " id="monthBtn">按月</button>
                </div>
                @* <div class="col-3 col-md-12"> *@
                @*     <button class="btn btn-primary btn-round " id="weekBtn">按週</button> *@
                @* </div> *@
                <div class="col-3 col-md-12">
                    <button class="btn btn-primary btn-round " id="dayBtn">按日</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        let responseJson = {
        }
        const startDateInput = $("#startDateInput");
        const endDateInput = $("#endDateInput");
        const monthBtn = $("#monthBtn");
        //const weekBtn = $("#weekBtn");
        const dayBtn = $("#dayBtn");
        const dayMiniSec = 86400000;
        let sd;
        let ed;
        const data = {};
        startDateInput.on("change", () => {
            sd = startDateInput.val();
            //LoadIncomeData(sd, ed);
            
        });
        endDateInput.on("change", () => {
            ed = endDateInput.val();
            //LoadIncomeData(sd, ed);
        });
        //按月
        monthBtn.on("click", () => {
             LoadIncomeData(sd, ed, 2);
            //放資料進chart
        });
        //按週
        // weekBtn.on("click", () => {
        //     LoadIncomeData(sd, ed);
        //     //放資料進chart
        // });
        //按日
        dayBtn.on("click", () => {
            if ((moment(ed) - moment(sd)) / dayMiniSec > 7) {
                alert("重選起始日期，不可間隔七天")
                return;
            }
            LoadIncomeData(sd, ed, 0);
            //放資料進chart
        });

        function LoadIncomeData(startDate, endDate, by) {
            if (startDate && endDate) {
                $.ajax({
                    type: "Get",
                    url: `/api/Income/${startDate}/${endDate}?type=${by}`,
                    data: "",
                    dataType: "json",
                    success: function (response) {
                        responseJson = response
                        data.labels = Object.keys(responseJson).map(x => by===0?x.slice(-5):x.slice(-2));
                        data.series = [
                            Object.values(responseJson)
                        ];
                        drawIncomeChart(data); 
                    }
                })
            }
            else {
                alert("請選擇起始日期與結束日期");
            }
        }

        function drawIncomeChart(data) {
            if ($('#incomeChart').length != 0) {
                dataIncomeChart = data;

                optionsIncomeChart = {
                    lineSmooth: Chartist.Interpolation.cardinal({
                        tension: 0
                    }),
                    low: 0,
                    high: Math.max(...data.series[0]), // creative tim: we recommend you to set the high sa the biggest value + something for a better look
                    chartPadding: {
                        top: 20,
                        right: 50,
                        bottom: 0,
                        left: 50
                    },
                }
                const incomeChart = new Chartist.Line('#incomeChart', dataIncomeChart, optionsIncomeChart);

                md.startAnimationForLineChart(incomeChart);
            }
        }
        
        // function vueCreate(){
        //     Vue.createApp({
        //         data(){
        //          return{
        //              chartData: data,
        //          };
        //         },
        //         methods:{
        //             initIncomeChart(data, by = 1){
        //                 const copy  = Object.assign({},data);
        //                 if (by === 1){
        //                     copy.labels = copy.labels.map(x => x.slice(-5));
        //                 }else if (by === 2){
        //                     copy.labels = copy.labels.map(x => x.substring(5,2));
        //                    
        //                 }
        //                 drawIncomeChart(copy);
        //             }
        //         },
        //        
        //     }).mount('#app');
        // }
    </script>
}